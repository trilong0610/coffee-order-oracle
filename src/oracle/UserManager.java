/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oracle;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author QTrun
 */
public class UserManager extends javax.swing.JFrame {

    /**
     * Creates new form Session
     */
    Vector vdata=new Vector();
    Vector vheader = new Vector();
    OracleConnection oracle;
    public UserManager() {
        initComponents();
    setTitle("Quản lý người dùng");
        oracle = new OracleConnection();
        vheader.add("Tên người dùng");
        vheader.add("Trạng thái");
        vheader.add("Hồ sơ");
        vheader.add("Tablespace");
        vheader.add("Đăng nhập cuối");
        
        jTable1.setModel(new DefaultTableModel(vdata, vheader));
        try {
            loadData();
        } catch (SQLException ex) {
            Logger.getLogger(SGA.class.getName()).log(Level.SEVERE, null, ex);
        }
        loadComboBox(cbbTablespace,"SELECT tablespace_name FROM user_tablespaces", "tablespace_name");
        loadComboBox(cbbTempTablespace,"SELECT PROPERTY_VALUE FROM DATABASE_PROPERTIES WHERE PROPERTY_NAME = 'DEFAULT_TEMP_TABLESPACE'","PROPERTY_VALUE");
        loadComboBox(cbbProfile,"SELECT profile FROM dba_profiles","PROFILE");
        loadComboBox(cbbRole,"SELECT * FROM dba_roles","ROLE");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        txtTK = new javax.swing.JTextField();
        txtMK = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnAddUser = new javax.swing.JButton();
        cbbTablespace = new javax.swing.JComboBox<>();
        cbbTempTablespace = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        grantDBA = new javax.swing.JButton();
        RevokeDBA = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btnGrantSesson = new javax.swing.JButton();
        btnRevokeSession = new javax.swing.JButton();
        cbbRole = new javax.swing.JComboBox<>();
        btnGrantRole = new javax.swing.JButton();
        btnRevokeRole = new javax.swing.JButton();
        cbbProfile = new javax.swing.JComboBox<>();
        btnGrantProfile = new javax.swing.JButton();
        btnRevokeProfile = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnDeleteUser = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        BtnLockUser = new javax.swing.JButton();
        btnUnlockUser = new javax.swing.JButton();
        ResetPassword = new javax.swing.JLabel();
        btnChangePassword = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Tạo người dùng"));

        jLabel2.setText("Tên người dùng");

        jLabel3.setText("Mật khẩu");

        btnAddUser.setText("Thêm");
        btnAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserActionPerformed(evt);
            }
        });

        cbbTablespace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTablespaceActionPerformed(evt);
            }
        });

        jLabel1.setText("Tablespace mặc định");

        jLabel4.setText("Tablespace tạm");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbbTablespace, 0, 157, Short.MAX_VALUE)
                    .addComponent(txtMK)
                    .addComponent(txtTK)
                    .addComponent(cbbTempTablespace, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddUser)
                .addGap(110, 110, 110))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtMK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbTablespace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbTempTablespace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddUser))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Hành động"));

        jLabel5.setText("Người dùng đang chọn");

        jLabel7.setText("Gán SYSDBA");

        grantDBA.setText("Gán");
        grantDBA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grantDBAActionPerformed(evt);
            }
        });

        RevokeDBA.setText("Thu hồi");
        RevokeDBA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RevokeDBAActionPerformed(evt);
            }
        });

        jLabel8.setText("Quyền đăng nhập");

        btnGrantSesson.setText("Gán");
        btnGrantSesson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrantSessonActionPerformed(evt);
            }
        });

        btnRevokeSession.setText("Thu hồi");
        btnRevokeSession.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRevokeSessionActionPerformed(evt);
            }
        });

        btnGrantRole.setText("Gán");
        btnGrantRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrantRoleActionPerformed(evt);
            }
        });

        btnRevokeRole.setText("Thu hồi");
        btnRevokeRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRevokeRoleActionPerformed(evt);
            }
        });

        btnGrantProfile.setText("Gán");
        btnGrantProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrantProfileActionPerformed(evt);
            }
        });

        btnRevokeProfile.setText("Thu hồi");
        btnRevokeProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRevokeProfileActionPerformed(evt);
            }
        });

        jLabel9.setText("Profile");

        jLabel10.setText("Vai trò");

        jLabel11.setText("Xóa người dùng");

        btnDeleteUser.setText("Xóa");
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });

        jLabel12.setText("Khóa người dùng");

        BtnLockUser.setText("Bật");
        BtnLockUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLockUserActionPerformed(evt);
            }
        });

        btnUnlockUser.setText("Tắt");
        btnUnlockUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnlockUserActionPerformed(evt);
            }
        });

        ResetPassword.setText("Đặt mật khẩu về 123");

        btnChangePassword.setText("Đổi");
        btnChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangePasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 19, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnGrantSesson)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnRevokeSession))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnGrantRole)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnRevokeRole))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnGrantProfile)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnRevokeProfile))
                                    .addComponent(btnDeleteUser)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(BtnLockUser)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnUnlockUser))
                                    .addComponent(btnChangePassword)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(grantDBA)
                                        .addGap(18, 18, 18)
                                        .addComponent(RevokeDBA))
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(14, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbbRole, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cbbProfile, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                .addComponent(ResetPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(grantDBA)
                    .addComponent(RevokeDBA))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnGrantSesson)
                        .addComponent(btnRevokeSession))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbbRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGrantRole)
                            .addComponent(btnRevokeRole))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbProfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGrantProfile)
                    .addComponent(btnRevokeProfile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(btnDeleteUser))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(BtnLockUser)
                    .addComponent(btnUnlockUser))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ResetPassword)
                    .addComponent(btnChangePassword))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel2.getAccessibleContext().setAccessibleName("");
        jPanel2.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        
          
        
    }//GEN-LAST:event_formWindowOpened

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int pos=this.jTable1.getSelectedRow();
        if(pos>=0){
            DisplayDetails(pos);
    }//GEN-LAST:event_jTable1MouseClicked
    }
    private void btnAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserActionPerformed
        // TODO add your handling code here:
        String tk = txtTK.getText();
        String mk = txtMK.getText();
        String dtablespace = cbbTablespace.getSelectedItem().toString();
        String ttablespace = cbbTempTablespace.getSelectedItem().toString();
        try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
             String sql = "CREATE USER "+tk+"\n" +
                            "IDENTIFIED BY "+mk+"\n" +
                            "DEFAULT TABLESPACE "+dtablespace+"\n" +
                            "TEMPORARY TABLESPACE "+ttablespace+"";
            ResultSet rset = stmt.executeQuery(sql);
            RemoveTableItem(jTable1);
            loadData();
            JOptionPane.showMessageDialog(null,"Thêm thành công");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Có lỗi xảy ra, Một số thay đổi có thể không được thực hiện","Lỗi",1);
            Logger.getLogger(UserManager.class.getName()).log(Level.SEVERE, null, ex);
        }
           
    }//GEN-LAST:event_btnAddUserActionPerformed

    private void cbbTablespaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTablespaceActionPerformed

    }//GEN-LAST:event_cbbTablespaceActionPerformed

    private void grantDBAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grantDBAActionPerformed
    
        // TODO add your handling code here:
        String username = jLabel6.getText();
        try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
             String sql = "GRANT SYSDBA TO "+username+"";
            ResultSet rset = stmt.executeQuery(sql);
            RemoveTableItem(jTable1);
            loadData();
            JOptionPane.showMessageDialog(null,"Gán thành công!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Có lỗi xảy ra, một số thay đổi có thể không được thực thi","Lỗi",1);
            Logger.getLogger(UserManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_grantDBAActionPerformed

    private void RevokeDBAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RevokeDBAActionPerformed

        // TODO add your handling code here:
        String username = jLabel6.getText();
        try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
             String sql = "REVOKE SYSDBA FROM "+username+"";
            ResultSet rset = stmt.executeQuery(sql);
            RemoveTableItem(jTable1);
            loadData();
            JOptionPane.showMessageDialog(null,"Thu hồi thành công!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Có lỗi xảy ra, một số thay đổi có thể không được thực thi","Lỗi",1);
            Logger.getLogger(UserManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_RevokeDBAActionPerformed

    private void btnGrantSessonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrantSessonActionPerformed
        // TODO add your handling code here:
        String username = jLabel6.getText();
        try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
             String sql = "GRANT CREATE SESSION TO "+username+"";
            ResultSet rset = stmt.executeQuery(sql);
            RemoveTableItem(jTable1);
            loadData();
            JOptionPane.showMessageDialog(null,"Gán thành công!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Có lỗi xảy ra, một số thay đổi có thể không được thực thi","Lỗi",1);
            Logger.getLogger(UserManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGrantSessonActionPerformed

    private void btnRevokeSessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRevokeSessionActionPerformed
        // TODO add your handling code here:
         String username = jLabel6.getText();
        try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
             String sql = "REVOKE CREATE SESSION FROM "+username+"";
            ResultSet rset = stmt.executeQuery(sql);
            RemoveTableItem(jTable1);
            loadData();
            JOptionPane.showMessageDialog(null,"Thu hồi thành công!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Có lỗi xảy ra, một số thay đổi có thể không được thực thi","Lỗi",1);
            Logger.getLogger(UserManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRevokeSessionActionPerformed

    private void btnGrantRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrantRoleActionPerformed
        // TODO add your handling code here:
        String username = jLabel6.getText();
        String rolename = cbbRole.getSelectedItem().toString();
        try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
             String sql = "GRANT "+rolename+" TO "+username+"";
            ResultSet rset = stmt.executeQuery(sql);
            RemoveTableItem(jTable1);
            loadData();
            JOptionPane.showMessageDialog(null,"Gán thành công!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Có lỗi xảy ra, một số thay đổi có thể không được thực thi","Lỗi",1);
            Logger.getLogger(UserManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGrantRoleActionPerformed

    private void btnRevokeRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRevokeRoleActionPerformed
        // TODO add your handling code here:
         String username = jLabel6.getText();
        String rolename = cbbRole.getSelectedItem().toString();
        try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
             String sql = "REVOKE "+rolename+" FROM "+username+"";
            ResultSet rset = stmt.executeQuery(sql);
            RemoveTableItem(jTable1);
            loadData();
            JOptionPane.showMessageDialog(null,"Thu hồi thành công!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Có lỗi xảy ra, một số thay đổi có thể không được thực thi","Lỗi",1);
            Logger.getLogger(UserManager.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnRevokeRoleActionPerformed

    private void btnGrantProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrantProfileActionPerformed
        // TODO add your handling code here:
         String username = jLabel6.getText();
        String profile = cbbProfile.getSelectedItem().toString();
        try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
             String sql = "ALTER USER "+username+" PROFILE "+profile+"";
            ResultSet rset = stmt.executeQuery(sql);
            RemoveTableItem(jTable1);
            loadData();
            JOptionPane.showMessageDialog(null,"Gán thành công!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Có lỗi xảy ra, một số thay đổi có thể không được thực thi","Lỗi",1);
            Logger.getLogger(UserManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGrantProfileActionPerformed

    private void btnRevokeProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRevokeProfileActionPerformed
        // TODO add your handling code here:
        String username = jLabel6.getText();
        
        try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
             String sql = "ALTER USER "+username+" PROFILE NULL";
            ResultSet rset = stmt.executeQuery(sql);
            RemoveTableItem(jTable1);
            loadData();
            JOptionPane.showMessageDialog(null,"Thu hồi thành công!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Có lỗi xảy ra, một số thay đổi có thể không được thực thi","Lỗi",1);
            Logger.getLogger(UserManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRevokeProfileActionPerformed

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed

        String username = jLabel6.getText(); 
        int result = JOptionPane.showConfirmDialog(null, "Hành động không thể hoàn tác?", "Cảnh báo", JOptionPane.YES_NO_OPTION);
        if (result == JOptionPane.YES_OPTION) {
            // Thực thi hành động cần thiết ở đây
             try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
             String sql = "DROP USER "+username+"";
            ResultSet rset = stmt.executeQuery(sql);
            RemoveTableItem(jTable1);
            loadData();
            JOptionPane.showMessageDialog(null,"Đã xóa người dùng!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Có lỗi xảy ra, một số thay đổi có thể không được thực thi","Lỗi",1);
            Logger.getLogger(UserManager.class.getName()).log(Level.SEVERE, null, ex);
        }
        }        // TODO add your handling code here:
       
        
       
    }//GEN-LAST:event_btnDeleteUserActionPerformed

    private void BtnLockUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLockUserActionPerformed
        // TODO add your handling code here:
        String username = jLabel6.getText();
        
        try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
             String sql = "ALTER USER "+username+" ACCOUNT LOCK";
            ResultSet rset = stmt.executeQuery(sql);
            RemoveTableItem(jTable1);
            loadData();
            JOptionPane.showMessageDialog(null,"Đã khóa người dùng!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Có lỗi xảy ra, một số thay đổi có thể không được thực thi","Lỗi",1);
            Logger.getLogger(UserManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BtnLockUserActionPerformed

    private void btnUnlockUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnlockUserActionPerformed
        // TODO add your handling code here:
        String username = jLabel6.getText();
        
        try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
             String sql = "ALTER USER "+username+" ACCOUNT UNLOCK";
            ResultSet rset = stmt.executeQuery(sql);
            RemoveTableItem(jTable1);
            loadData();
            JOptionPane.showMessageDialog(null,"Đã mở khóa người dùng!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Có lỗi xảy ra, một số thay đổi có thể không được thực thi","Lỗi",1);
            Logger.getLogger(UserManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUnlockUserActionPerformed

    private void btnChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangePasswordActionPerformed
        // TODO add your handling code here:
        String username = jLabel6.getText();
        
        try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
             String sql = "ALTER USER "+username+" IDENTIFIED BY 123";
            ResultSet rset = stmt.executeQuery(sql);
            RemoveTableItem(jTable1);
            loadData();
            JOptionPane.showMessageDialog(null,"Đã đặt lại mật khẩu!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Có lỗi xảy ra, một số thay đổi có thể không được thực thi","Lỗi",1);
            Logger.getLogger(UserManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnChangePasswordActionPerformed
    

    /**
     * @param args the command line arguments
     */
       
    
    
    public void DisplayDetails(int selectedrow)
    {
        Vector vRow=(Vector)vdata.get(selectedrow);
        String Code=(String)vRow.get(0);
        
      
        jLabel6.setText(Code);
        
        
    }
    public void loadData() throws SQLException
    {
        try
        {
            oracle.openConnection();
            String sql = "select username,account_status, profile,default_tablespace, last_login  from dba_users";
            Statement stmt = oracle.conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            while(rs.next())
            {
                String one = rs.getString("USERNAME");
                String two = rs.getString("ACCOUNT_STATUS");
                String three = rs.getString("PROFILE");
                String four = rs.getString("DEFAULT_TABLESPACE");
                String five = rs.getString("LAST_LOGIN");
                
                
                Vector<String> v = new Vector<String>();
                v.add(one);
                v.add(two);
                v.add(three);
                v.add(four);
                v.add(five);
                
                
                vdata.add(v);
                
            }
            jTable1.updateUI();
            oracle.closeConnection();
        } catch(SQLException ex)
        {
            Logger.getLogger(SGA.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void loadComboBox(JComboBox<String> jComboBox, String sql,String rowname)
    {
        try {
            oracle.openConnection();
            // Kết nối đến CSDL Oracle
            
            Statement stmt = oracle.conn.createStatement();
            
            // Truy vấn dữ liệu
            ResultSet rs = stmt.executeQuery(sql);
            
            // Đưa dữ liệu vào mảng
            while (rs.next()) {
                String name = rs.getString(rowname);
                jComboBox.addItem(name);
            }
            
            oracle.closeConnection();
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnLockUser;
    private javax.swing.JLabel ResetPassword;
    private javax.swing.JButton RevokeDBA;
    private javax.swing.JButton btnAddUser;
    private javax.swing.JButton btnChangePassword;
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnGrantProfile;
    private javax.swing.JButton btnGrantRole;
    private javax.swing.JButton btnGrantSesson;
    private javax.swing.JButton btnRevokeProfile;
    private javax.swing.JButton btnRevokeRole;
    private javax.swing.JButton btnRevokeSession;
    private javax.swing.JButton btnUnlockUser;
    private javax.swing.JComboBox<String> cbbProfile;
    private javax.swing.JComboBox<String> cbbRole;
    private javax.swing.JComboBox<String> cbbTablespace;
    private javax.swing.JComboBox<String> cbbTempTablespace;
    private javax.swing.JButton grantDBA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtMK;
    private javax.swing.JTextField txtTK;
    // End of variables declaration//GEN-END:variables

    private void RemoveTableItem(JTable table) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            table.removeAll();
    }
}
